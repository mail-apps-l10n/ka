# LOCALIZATION NOTE These strings are used inside the Web Console
# command line which is available from the Web Developer sub-menu
# -> 'Web Console'.
# The correct localization of this file might be to keep it in
# English, or another language commonly spoken among web developers.
# You want to make that choice consistent across the developer tools.
# A good criteria is the language in which you'd find the best
# documentation on web development on the web.

# LOCALIZATION NOTE (canonDescNone): Short string used to describe any command
# or command parameter when no description has been provided.
canonDescNone=(\u10d0\u10e6\u10ec\u10d4\u10e0\u10d8\u10da\u10dd\u10d1\u10d8\u10e1 \u10d2\u10d0\u10e0\u10d4\u10e8\u10d4)

# LOCALIZATION NOTE (cliEvalJavascript): The special '{' command allows entry
# of JavaScript like traditional developer tool command lines. This describes
# the '{' command.
cliEvalJavascript=\u10e3\u10e8\u10e3\u10d0\u10da\u10dd\u10d3 \u10e8\u10d4\u10d8\u10e2\u10d0\u10dc\u10d4\u10d7 JavaScript

# LOCALIZATION NOTE (fieldSelectionSelect): When a command has a parameter
# that has a number of pre-defined options the user interface presents these
# in a drop-down menu, where the first 'option' is an indicator that a
# selection should be made. This string describes that first option.
fieldSelectionSelect=\u10e8\u10d4\u10d0\u10e0\u10e9\u10d8\u10d4\u10d7 %S ...

# LOCALIZATION NOTE (fieldArrayAdd): When a command has a parameter that can
# be repeated a number of times (e.g. like the 'cat a.txt b.txt' command) the
# user interface presents buttons to add and remove arguments. This string is
# used to add arguments.
fieldArrayAdd=\u10d3\u10d0\u10db\u10d0\u10e2\u10d4\u10d1\u10d0

# LOCALIZATION NOTE (fieldArrayDel): When a command has a parameter that can
# be repeated a number of times (e.g. like the 'cat a.txt b.txt' command) the
# user interface presents buttons to add and remove arguments. This string is
# used to remove arguments.
fieldArrayDel=\u10ec\u10d0\u10e8\u10da\u10d0

# LOCALIZATION NOTE (jstypeParseScope): The command line provides completion
# for JavaScript commands, however there are times when the scope of what
# we're completing against can't be used. This error message is displayed when
# this happens.
jstypeParseScope=\u10e1\u10d0\u10db\u10e3\u10e8\u10d0\u10dd \u10d0\u10e0\u10d4 \u10d3\u10d0\u10d8\u10d9\u10d0\u10e0\u10d2\u10d0

# LOCALIZATION NOTE (jstypeParseMissing): When the command line is doing
# JavaScript completion, sometimes the property to be completed does not
# exist. This error message is displayed when this happens.
jstypeParseMissing=\u10d5\u10d4\u10e0 \u10db\u10dd\u10d8\u10eb\u10d4\u10d1\u10dc\u10d0 \u10de\u10d0\u10e0\u10d0\u10db\u10d4\u10e2\u10e0\u10d8 '%S'

# LOCALIZATION NOTE (jstypeBeginSyntax): When the command line is doing
# JavaScript completion using invalid JavaScript, this error message is
# displayed.
jstypeBeginSyntax=\u10e1\u10d8\u10dc\u10e2\u10d0\u10e5\u10e1\u10d8\u10e1 \u10e8\u10d4\u10ea\u10d3\u10dd\u10db\u10d0

# LOCALIZATION NOTE (jstypeBeginUnterm): When the command line is doing
# JavaScript completion using a string that is not properly terminated, this
# error message is displayed.
jstypeBeginUnterm=\u10d0\u10e0\u10d0\u10e1\u10e0\u10e3\u10da\u10d8 \u10e2\u10d4\u10e5\u10e1\u10e2\u10e3\u10e0\u10d8 \u10db\u10e3\u10d3\u10db\u10d8\u10d5\u10d0

# LOCALIZATION NOTE (jstypeParseError): If the system for providing JavaScript
# completions encounters and error it displays this.
jstypeParseError=\u10e8\u10d4\u10ea\u10d3\u10dd\u10db\u10d0

# LOCALIZATION NOTE (typesNumberNan): When the command line is passed a
# number, however the input string is not a valid number, this error message
# is displayed.
typesNumberNan=\u10d5\u10d4\u10e0 \u10ee\u10d4\u10e0\u10ee\u10d3\u10d4\u10d1\u10d0 \u10d2\u10d0\u10e0\u10d3\u10d0\u10e5\u10db\u10dc\u10d0: "%S" - \u10e0\u10d8\u10ea\u10ee\u10d5\u10d8.

# LOCALIZATION NOTE (typesNumberMax): When the command line is passed a
# number, but the number is bigger than the largest allowed number, this error
# message is displayed.
typesNumberMax=%1$S \u10db\u10d4\u10e2\u10d8\u10d0 \u10d3\u10d0\u10e1\u10d0\u10e8\u10d5\u10d4\u10d1 \u10db\u10d0\u10e5\u10e1\u10d8\u10db\u10e3\u10db\u10d6\u10d4: %2$S.

# LOCALIZATION NOTE (typesNumberMin): When the command line is passed a
# number, but the number is lower than the smallest allowed number, this error
# message is displayed.
typesNumberMin=%1$S \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10d8\u10d0 \u10d3\u10d0\u10e1\u10d0\u10d0\u10e8\u10d5\u10d4\u10d1 \u10db\u10d8\u10dc\u10d8\u10db\u10e3\u10db\u10d6\u10d4: %2$S.

# LOCALIZATION NOTE (typesSelectionNomatch): When the command line is passed
# an option with a limited number of correct values, but the passed value is
# not one of them, this error message is displayed.
typesSelectionNomatch=\u10d5\u10d4\u10e0 \u10ee\u10d4\u10e0\u10ee\u10d3\u10d4\u10d1\u10d0 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0 - '%S'.

# LOCALIZATION NOTE (nodeParseSyntax): When the command line is expecting a
# CSS query string, however the passed string is not valid, this error message
# is displayed.
nodeParseSyntax=\u10e1\u10d8\u10dc\u10e2\u10d0\u10e5\u10e1\u10d8\u10e1 \u10e8\u10d4\u10ea\u10d3\u10dd\u10db\u10d0 CSS \u10db\u10dd\u10d7\u10ee\u10dd\u10d5\u10dc\u10d0\u10e8\u10d8

# LOCALIZATION NOTE (nodeParseMultiple): When the command line is expecting a
# CSS string that matches a single node, but more than one node matches, this
# error message is displayed.
nodeParseMultiple=\u10db\u10d4\u10e2\u10d8\u10e1\u10db\u10d4\u10e2\u10d0\u10d3 \u10d1\u10d4\u10d5\u10e0\u10d8 \u10d7\u10d0\u10dc\u10ee\u10d5\u10d4\u10d3\u10e0\u10d0 (%S)

# LOCALIZATION NOTE (nodeParseNone): When the command line is expecting a CSS
# string that matches a single node, but no nodes match, this error message is
# displayed.
nodeParseNone=\u10d7\u10d0\u10dc\u10ee\u10d5\u10d4\u10d3\u10e0\u10d4\u10d1\u10d8 \u10d0\u10e0\u10d0\u10d0

